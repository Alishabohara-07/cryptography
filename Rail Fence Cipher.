def encrypt(input_text, depth):
    if depth == 1:
        return input_text
    
    # Create the 2D list (rail) with depth rows and length of input_text columns filled with empty strings
    rail = [['' for _ in range(len(input_text))] for _ in range(depth)]
    
    # Variables to determine the direction of filling the rail
    direction_down = False
    row, col = 0, 0
    
    # Fill the rail matrix
    for char in input_text:
        rail[row][col] = char
        col += 1
        
        # Change direction if we hit the top or bottom
        if row == 0 or row == depth - 1:
            direction_down = not direction_down
        
        # Move to the next row in the appropriate direction
        if direction_down:
            row += 1
        else:
            row -= 1
    
    # Read the characters from the rail matrix row by row
    encrypted_text = []
    for i in range(depth):
        for j in range(len(input_text)):
            if rail[i][j] != '':
                encrypted_text.append(rail[i][j])
    
    return ''.join(encrypted_text)

# Get input from the user
input_text = input("Enter the text: ").replace(" ", "")  # Remove spaces from the input text
depth = int(input("Enter the depth: "))

# Encrypt the input text
encrypted_text = encrypt(input_text, depth)
print(f"Encrypted text: {encrypted_text}")
